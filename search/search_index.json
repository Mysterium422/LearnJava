{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Learn Java Goal The goal of this website is go from no prior experience to coding a simple text adventure game. Note that this format purposefully simply has goals and hints for each section, and there isn't a huge amount of teaching. This is because a big part of coding is learning from google, stackoverflow, documentation, and ChatGPT. Use of AI Note that these assignments would likely be simple enough for ChatGPT to solve. Thus, I recommend that any questions to ChatGPT should not be specific to this project. Ask broad, general questions which could apply to any project, not just this one. In addition, I recommend that you never copy/paste from the site or your code to ChatGPT, or from ChatGPT to your code. It is up to you to follow these heuristics, these are only recommendations for you to maximize your learning","title":"Welcome"},{"location":"#welcome-to-learn-java","text":"","title":"Welcome to Learn Java"},{"location":"#goal","text":"The goal of this website is go from no prior experience to coding a simple text adventure game. Note that this format purposefully simply has goals and hints for each section, and there isn't a huge amount of teaching. This is because a big part of coding is learning from google, stackoverflow, documentation, and ChatGPT.","title":"Goal"},{"location":"#use-of-ai","text":"Note that these assignments would likely be simple enough for ChatGPT to solve. Thus, I recommend that any questions to ChatGPT should not be specific to this project. Ask broad, general questions which could apply to any project, not just this one. In addition, I recommend that you never copy/paste from the site or your code to ChatGPT, or from ChatGPT to your code. It is up to you to follow these heuristics, these are only recommendations for you to maximize your learning","title":"Use of AI"},{"location":"arithmetic/","text":"Step 2: Variables and Arithmetic 2.1: First Operation First, given variables damage and number_of_hits , print the total damage dealt. /** Main.java */ public class Main { public static void main(String[] args) { /** Step 1 Code goes here */ /** Step 2.1 */ int damage = 4; // Comment this line when using the next line // double damage = 2.5; // Uncomment this line to try it with a decimal int number_of_hits = 3; // TODO Print the total damage dealt } } Expect Output 12 (if using int) 7.5 (if using double) 2.2: More Operations Next, given variables opponent_health , opponent_damage , opponent_shield , player_health , player_damage , and player_shield , calculate the damage dealt by the opponent on the player. Damage dealt is calculated as damage - shield . Store the damage dealt in a variable called damage_dealt . Subtract this damage from the player's health and print their new health to console. /** Main.java */ public class Main { public static void main(String[] args) { /** Step 1 & 2.1 Code goes here */ // TODO: Print a Welcome Message Here /** Step 2.2 */ double player_health = 40; int player_damage = 10; int player_shield = 3; double opponent_health = 50; int opponent_damage = 8; int opponent_shield = 6; int damage_dealt = 0; // TODO: Calculate the damage dealt // TODO: Subtract the damage from the player's health and print it to console } } Expect Output 35 2.3: Integer Division Calculate the number of hits it will take to defeat the opponent. You may NOT use any imports. Use casting and integer division. /** Main.java */ public class Main { public static void main(String[] args) { /** Step 1, 2.1 & 2.2 Code goes here */ /** Step 2.3 */ // TODO: Calculate and print the number of hits needed to defeat the opponent. Do NOT use any imports. } } Expected Output 14 2.4: Update a variable You received a powerbuff! Increase the player's damage by 30%. Then, calculate the opponent's new health if the player deals a hit. /** Main.java */ public class Main { public static void main(String[] args) { /** Step 1, 2.1, 2.2 & 2.3 Code goes here */ /** Step 2.4 */ // TODO: Increase the player's damage by 30%. Only use multiplication. // TODO: Calculate and print the opponent's new health after the player deals a hit } } Expected Output 43","title":"Step 2: Variables and Arithmetic"},{"location":"arithmetic/#step-2-variables-and-arithmetic","text":"","title":"Step 2: Variables and Arithmetic"},{"location":"arithmetic/#21-first-operation","text":"First, given variables damage and number_of_hits , print the total damage dealt. /** Main.java */ public class Main { public static void main(String[] args) { /** Step 1 Code goes here */ /** Step 2.1 */ int damage = 4; // Comment this line when using the next line // double damage = 2.5; // Uncomment this line to try it with a decimal int number_of_hits = 3; // TODO Print the total damage dealt } } Expect Output 12 (if using int) 7.5 (if using double)","title":"2.1: First Operation"},{"location":"arithmetic/#22-more-operations","text":"Next, given variables opponent_health , opponent_damage , opponent_shield , player_health , player_damage , and player_shield , calculate the damage dealt by the opponent on the player. Damage dealt is calculated as damage - shield . Store the damage dealt in a variable called damage_dealt . Subtract this damage from the player's health and print their new health to console. /** Main.java */ public class Main { public static void main(String[] args) { /** Step 1 & 2.1 Code goes here */ // TODO: Print a Welcome Message Here /** Step 2.2 */ double player_health = 40; int player_damage = 10; int player_shield = 3; double opponent_health = 50; int opponent_damage = 8; int opponent_shield = 6; int damage_dealt = 0; // TODO: Calculate the damage dealt // TODO: Subtract the damage from the player's health and print it to console } } Expect Output 35","title":"2.2: More Operations"},{"location":"arithmetic/#23-integer-division","text":"Calculate the number of hits it will take to defeat the opponent. You may NOT use any imports. Use casting and integer division. /** Main.java */ public class Main { public static void main(String[] args) { /** Step 1, 2.1 & 2.2 Code goes here */ /** Step 2.3 */ // TODO: Calculate and print the number of hits needed to defeat the opponent. Do NOT use any imports. } } Expected Output 14","title":"2.3: Integer Division"},{"location":"arithmetic/#24-update-a-variable","text":"You received a powerbuff! Increase the player's damage by 30%. Then, calculate the opponent's new health if the player deals a hit. /** Main.java */ public class Main { public static void main(String[] args) { /** Step 1, 2.1, 2.2 & 2.3 Code goes here */ /** Step 2.4 */ // TODO: Increase the player's damage by 30%. Only use multiplication. // TODO: Calculate and print the opponent's new health after the player deals a hit } } Expected Output 43","title":"2.4: Update a variable"},{"location":"primitives/","text":"Step 2: Variables and Arithmetic 2.1: First Operation First, given variables damage and number_of_hits , print the total damage dealt. 2.2: More Operations Next, given variables opponent_health , opponent_damage , opponent_shield , player_health , player_damage , and player_shield , calculate the damage dealt by the opponent on the player. Damage dealt is calculated as damage - shield . Store the damage dealt in a variable called damage_dealt . Subtract this damage from the player's health and print their new health to console. 2.3: Integer Division Calculate the number of hits it will take to defeat the opponent. You may NOT use any imports. Use casting and integer division. 2.4: Update a variable You received a powerbuff! Increase the player's damage by 30%. Then, calculate the opponent's new health if the player deals a hit.","title":"Step 2: Variables and Arithmetic"},{"location":"primitives/#step-2-variables-and-arithmetic","text":"","title":"Step 2: Variables and Arithmetic"},{"location":"primitives/#21-first-operation","text":"First, given variables damage and number_of_hits , print the total damage dealt.","title":"2.1: First Operation"},{"location":"primitives/#22-more-operations","text":"Next, given variables opponent_health , opponent_damage , opponent_shield , player_health , player_damage , and player_shield , calculate the damage dealt by the opponent on the player. Damage dealt is calculated as damage - shield . Store the damage dealt in a variable called damage_dealt . Subtract this damage from the player's health and print their new health to console.","title":"2.2: More Operations"},{"location":"primitives/#23-integer-division","text":"Calculate the number of hits it will take to defeat the opponent. You may NOT use any imports. Use casting and integer division.","title":"2.3: Integer Division"},{"location":"primitives/#24-update-a-variable","text":"You received a powerbuff! Increase the player's damage by 30%. Then, calculate the opponent's new health if the player deals a hit.","title":"2.4: Update a variable"},{"location":"print/","text":"Step 1: First Line of Code Let's start simple, print a message to the console. Here is some starter code: /** Main.java */ // Note: All code typically lives within a class public class Main { // This method is the entry point for a program. Research what each of the keywords mean. public static void main(String[] args) { // TODO: Print a Welcome Message Here } }","title":"Step 1: First Line of Code"},{"location":"print/#step-1-first-line-of-code","text":"Let's start simple, print a message to the console. Here is some starter code: /** Main.java */ // Note: All code typically lives within a class public class Main { // This method is the entry point for a program. Research what each of the keywords mean. public static void main(String[] args) { // TODO: Print a Welcome Message Here } }","title":"Step 1: First Line of Code"},{"location":"setup/","text":"Step 0: Setup This assumes that you have already had your jdk, ide, etc setup. I am skipping this step since in FRC, your environment is mostly setup for you. Assuming you are in Visual Studio Code, you should be able to create a new Java project, and run the whole project using the play button.","title":"Step 0: Setup"},{"location":"setup/#step-0-setup","text":"This assumes that you have already had your jdk, ide, etc setup. I am skipping this step since in FRC, your environment is mostly setup for you. Assuming you are in Visual Studio Code, you should be able to create a new Java project, and run the whole project using the play button.","title":"Step 0: Setup"}]}